insertstart = 0

# 默认为 recordcount - insertstart, 也就是 recordcount
# insertcount = 0

# 所有测试线程一共需要完成的操作数，因此小于线程数会报错
# 如果开启了 dotransactions，操作数为 operationcount
# 如果未开启 dotransactions
# + 如果 insertcount 非 0，则操作数为 insertcount
# + 如果 recordcount 非 0，则操作数为 recordcount
# + 否则为 0
operationcount = 0

# 测试数据数量
recordcount = 0

# 当前只支持 core workload
workload = core

# exporter 无用参数
# exporterfile 无用参数

threadcount = 200

# 所有线程的目标 OPS，被平均到每个线程上，如果线程达到了目标 OPS 会进行 throttle
target = 0

# maxexecutiontime 无用参数

warmuptime = 0

dotransactions = false

# status 无用参数
# label 无用参数

# 超过 1 时做 batch，会调用 DoBatchTransaction (如果开启了 dotransaction) 和 DoBatchInsert
# 需要 DB 实现 BatchInsert 等调用
# 否则只做普通的 DoTransaction 和 DoInsert
batch.size = 1

table = usertable

# 写入字段数量
# 每个字段名为 "field" + fieldcount 编号，例如 field0, field1, ...
fieldcount = 10

# constant  字段数据长度是固定长度
# uniform   字段数据长度是 [1, fieldlength] 范围随机选择一个数字
# zipfian   字段数据长度是 [1, fieldlength] 范围的数字，某些值可能出现比较频繁
# histogram 字段数据长度从直方图文件 fieldlengthhistogram 里面导出
fieldlengthdistribution = constant

# 写入的字段数据的长度
fieldlength = 100

# 当 fieldlengthdistribution 为 histogram 时设置
fieldlengthhistogram = hist.txt

# 开启 dotransaction 进行事务操作时有用
readallfields = true
writeallfields = false

# 开启了后必须同时设置 fieldlengthdistribution = constant
dataintegrity = false

# 随机运行 read/delete/update/insert/RMW 的比例，总和为 1
readproportion = 0.95
deleteproportion = 0.0
updateproportion = 0.0
insertproportion = 0.0
scanproportion = 0.0
readmodifywriteproportion = 0.0

# uniform     读到每行的概率一样，随机选择
# sequential  按顺序选择的一行
# zipfian     某些行被请求的概率更大
# latest      倾向于访问新数据而不是老数据
# hotspot     热点分布访问
# exponential 指数分布访问
requestdistribution = uniform

# padding 0 的数量
zeropadding = 1

# maxscanlength
maxscanlength = 1000

# uniform
# zipfian
scanlengthdistribution = uniform

# ordered 类型生成的 keys 就是 user0, user1, user2...
# hashed  类型生成的就是随机
insertorder = ordered

hotspotdatafraction = 0.2
hotspotopnfraction = 0.8

# 插入失败重试次数
core_workload_insertion_retry_limit = 0

# 插入重试间隔 [0.8, 1.2) * core_workload_insertion_retry_interval, 单位为秒
core_workload_insertion_retry_interval = 3

exponential.percentile = 0.95
exponential.frac = 0.8571428571

debug.pprof = :6060

verbose = false
dropdata = false

# 设置 false 运行测试时如果报错会打印错误信息
silence = true

# 生成主键的前缀，后面根据 insertorder 生成后缀
keyprefix = user

verifyrow.logfile = verifyrow.log

# 有一个线程负责每隔一段时间收集和打印所有线程的测试统计，单位为秒
measurement.interval = 10

measurementtype = histogram
measurement.output_file =

# 启动测试时传入: load or run
command =

# plain
# json
# table
outputstyle = plain

histogram.percentiles.export = false
histogram.percentiles.export.filepath = ./
outputstyle = plain
